name: Build packages

on:
  push:
    branches:
      - develop
    tags:
      - v*
  repository_dispatch:
    types: [build_packages]

jobs:
  windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
    - uses: ilammy/msvc-dev-cmd@v1
    - name: build
      run: |
        $version = $("${{ github.ref }}" | sed -r 's .*/.*/(.*) \1 g')
        $env:EMQX_DEPS_DEFAULT_VSN = $version
        set-executionpolicy remotesigned -s cu
        iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
        scoop bucket add extras https://github.com/lukesampson/scoop-extras.git
        scoop install sudo curl 7zip aws erlang vcredist2013
        $env:path + ";" + $env:USERPROFILE + "\scoop\shims"
        make deps-emqx
        $rebar3 = $env:USERPROFILE + "\rebar3"
        (New-Object System.Net.WebClient).DownloadFile('https://s3.amazonaws.com/rebar3/rebar3', $rebar3)
        cd _build/emqx/lib/jiffy/
        escript $rebar3 compile
        cd ../../../../
        make emqx
        mkdir -p _packages/emqx
        $pkg_name = "emqx-windows-$("${{ github.ref }}" | sed -r 's .*/.*/(.*) \1 g').zip"
        Compress-Archive -Path _build/emqx/rel/emqx -DestinationPath _build/emqx/rel/$pkg_name
        mv _build/emqx/rel/$pkg_name _packages/emqx
        sudo ./_build/emqx/rel/emqx/bin/emqx start
        sudo ./_build/emqx/rel/emqx/bin/emqx stop
        sudo ./_build/emqx/rel/emqx/bin/emqx install
        sudo ./_build/emqx/rel/emqx/bin/emqx uninstall
        Get-FileHash -Path "_packages/emqx/$pkg_name" | Format-List | grep 'Hash' | awk '{print $3}'  > _packages/emqx/$pkg_name.sha256
        aws configure set aws_access_key_id ${{ secrets.AwsAccessKeyId }}
        aws configure set aws_secret_access_key ${{ secrets.AwsSecretAccessKey }}
        aws configure set default.region us-west-2
        aws s3 cp --recursive ./_packages/emqx  s3://packages.emqx.io/emqx-ce/$("${{ github.ref }}" | sed -r 's .*/.*/(.*) \1 g')

  # mac:
  #   runs-on: macos-latest

  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: set aws
  #     run: |
  #       curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-macos.zip" -o "awscliv2.zip"
  #       unzip awscliv2.zip
  #       sudo ./aws/install
  #       aws2 configure set aws_access_key_id ${{ secrets.AwsAccessKeyId }}
  #       aws2 configure set aws_secret_access_key ${{ secrets.AwsSecretAccessKey }}
  #       aws2 configure set default.region us-west-2
  #   - name: prepare
  #     run: |
  #       /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  #       brew install curl zip unzip gnu-sed erlang openssl@1.1
  #       echo "/usr/local/bin:$PATH" >> ~/.bashrc
  #   - name: build
  #     run: |
  #       if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | gsed -r  "s .*/.*/(.*) \1 g"); fi
  #       EMQX_DEPS_DEFAULT_VSN=$version make emqx
  #       mkdir -p _packages/emqx
  #       cd ./_build/emqx/rel && zip -rq emqx-macosx-$version.zip emqx && cd - && mv ./_build/emqx/rel/emqx-macosx-$version.zip _packages/emqx
  #       ./_build/emqx/rel/emqx/bin/emqx start
  #       ./_build/emqx/rel/emqx/bin/emqx stop
  #       openssl dgst -sha256 ./_packages/emqx/emqx-macosx-$version.zip | awk '{print $2}'  > ./_packages/emqx/emqx-macosx-$version.zip.sha256
  #       aws2 s3 cp --recursive ./_packages/emqx  s3://packages.emqx.io/emqx-ce/$version

  linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: 
          - ubuntu18.04 
          - ubuntu16.04 
          - ubuntu14.04 
          - debian10
          - debian9 
          - debian8 
          - opensuse
          - centos7 
          - centos6
          - raspbian10
          - raspbian9
          - raspbian8
  
    steps:
    - uses: actions/checkout@v1
    - name: set aws
      run: |
        curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        aws configure set aws_access_key_id ${{ secrets.AwsAccessKeyId }}
        aws configure set aws_secret_access_key ${{ secrets.AwsSecretAccessKey }}
        aws configure set default.region us-west-2
    - name: build emqx packages
      env:
        ERL_OTP: erl22.1
        SYSTEM: ${{ matrix.os }}
      run: |
        if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
        sudo docker run --rm --privileged multiarch/qemu-user-static:register --reset
        sudo docker run -i --name $SYSTEM-build -e EMQX_DEPS_DEFAULT_VSN=$version -e SYSTEM=$SYSTEM -v $(pwd):/emqx-rel emqx/build-env:$ERL_OTP-$SYSTEM sh -c "cd /emqx-rel/.github/workflows/script; if [ -z $(echo $SYSTEM | grep -o raspbian) ];then EMQX_NAME=emqx ./build.sh; fi; EMQX_NAME=emqx-edge ./build.sh"
        cd _packages/emqx && for var in $(ls emqx-$SYSTEM-* ); do sudo bash -c "echo $(sha256sum $var | awk '{print $1}') > $var.sha256"; done && cd -
        cd _packages/emqx-edge/&& for var in $(ls emqx-edge-$SYSTEM-* ); do sudo bash -c "echo $(sha256sum $var | awk '{print $1}') > $var.sha256"; done && cd -
        [ -d _packages/emqx ] && aws s3 cp --recursive ./_packages/emqx  s3://packages.emqx.io/emqx-ce/$version
        [ -d _packages/emqx-edge ] && aws s3 cp --recursive ./_packages/emqx-edge s3://packages.emqx.io/emqx-edge/$version

  docker:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch:
          - [amd64, x86_64]
          - [arm64v8, aarch64]
          - [arm32v7, arm]
          - [i386, i386]
          - [s390x, s390x]

    steps:
    - name: set aws
      run: |
        curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        aws configure set aws_access_key_id ${{ secrets.AwsAccessKeyId }}
        aws configure set aws_secret_access_key ${{ secrets.AwsSecretAccessKey }}
        aws configure set default.region us-west-2
    - uses: actions/checkout@v2
      with: 
        path: emqx-rel
    - name: fetch all history for all tags and branches
      run: |
        cd emqx-rel
        git fetch --prune --unshallow
    - uses: actions/checkout@v2
      with:
        repository: emqx/emqx-integration-test
        token: ${{ secrets.AccessToken }}
        path: emqx-integration-test
    - name: build emqx docker image
      env:
        ARCH: ${{ matrix.arch[0] }}
        QEMU_ARCH: ${{ matrix.arch[1] }}
      run: |
        if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
        sudo docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        sudo EMQX_DEPS_DEFAULT_VSN=$version TARGET=emqx/emqx ARCH=$ARCH QEMU_ARCH=$QEMU_ARCH  make -C emqx-rel/deploy/docker
        sudo EMQX_DEPS_DEFAULT_VSN=$version TARGET=emqx/emqx ARCH=$ARCH QEMU_ARCH=$QEMU_ARCH make -C emqx-rel/deploy/docker save
        cd emqx-rel/_packages/emqx && for var in $(ls emqx-docker-* ); do sudo bash -c "echo $(sha256sum $var | awk '{print $1}') > $var.sha256"; done && cd -
        aws s3 cp --recursive emqx-rel/_packages/emqx  s3://packages.emqx.io/emqx-ce/$version
        sudo EMQX_DEPS_DEFAULT_VSN=$version TARGET=emqx/emqx-edge ARCH=$ARCH QEMU_ARCH=$QEMU_ARCH  make -C emqx-rel/deploy/docker
        sudo EMQX_DEPS_DEFAULT_VSN=$version TARGET=emqx/emqx-edge ARCH=$ARCH QEMU_ARCH=$QEMU_ARCH  make -C emqx-rel/deploy/docker save
        cd emqx-rel/_packages/emqx-edge && for var in $(ls emqx-edge-docker-* ); do sudo bash -c "echo $(sha256sum $var | awk '{print $1}') > $var.sha256"; done && cd -
        aws s3 cp --recursive emqx-rel/_packages/emqx-edge s3://packages.emqx.io/emqx-edge/$version
    - name: docker test
      if: matrix.arch[0] == 'amd64'
      run: |
        if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
        sudo EMQX_DEPS_DEFAULT_VSN=$version TARGET=emqx/emqx PAHO_BRANCH="develop-4.0" make -C emqx-integration-test/paho-test cluster_test
        sudo EMQX_DEPS_DEFAULT_VSN=$version TARGET=emqx/emqx-edge PAHO_BRANCH="develop-4.0" make -C emqx-integration-test/paho-test cluster_test

  upload:
    runs-on: ubuntu-latest

    # needs: [windows, mac, linux, docker]
    needs: [windows, linux, docker]

    steps:
    - name: set aws
      run: |
        curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        aws configure set aws_access_key_id ${{ secrets.AwsAccessKeyId }}
        aws configure set aws_secret_access_key ${{ secrets.AwsSecretAccessKey }}
        aws configure set default.region us-west-2
    - name: install dos2unix
      run: sudo apt-get update && sudo apt install -y dos2unix
    - name: get packages
      run: |
        if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
        mkdir -p packages
        aws s3 cp --recursive s3://packages.emqx.io/emqx-ce/$version ./packages
        aws s3 cp --recursive s3://packages.emqx.io/emqx-edge/$version ./packages
        cd packages && for var in $( ls |grep emqx |grep -v sha256); do 
          dos2unix $var.sha256
          echo "$(cat $var.sha256) $var" | sha256sum -c || exit 1
        done
    - uses: actions/checkout@v2
      with:
        path: emqx-rel
    - name: update to github and emqx.io
      run: |
        if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
        if [ ! -z $(echo $version | grep -oE "v[0-9]+\.[0-9]+(\.[0-9]+)?") ]; then
          cd packages
          for var in $(ls); do
            ../emqx-rel/.github/workflows/script/upload_github_release_asset.sh owner=emqx repo=emqx tag=$version filename=$var github_api_token=$(echo ${{ secrets.AccessToken }})
          done
          aws cloudfront create-invalidation --distribution-id E3TYD0WSP4S14P --paths "/emqx-ce/$version/*,/emqx-edge/$version/*"
          curl -w %{http_code} --insecure -H ${{ secrets.EmqxHeader }} https://admin.emqx.io/api/v1/github_release_callback?tag=$version
        fi
    - name: push docker image to docker hub
      run: |
        if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
        if [ ! -z $(echo $version | grep -oE "v[0-9]+\.[0-9]+(\.[0-9]+)?") ]; then
          sudo make -C emqx-rel/deploy/docker prepare
          cd ./packages && for var in $(ls |grep docker |grep -v sha256); do unzip $var; sudo docker load < ${var%.*}; rm -f ${var%.*}; done && cd -
          echo ${{ secrets.DockerHubPassword }} |sudo docker login -u ${{ secrets.DockerHubUser }} --password-stdin
          sudo EMQX_DEPS_DEFAULT_VSN=$version make -C emqx-rel emqx-docker-push
          sudo EMQX_DEPS_DEFAULT_VSN=$version make -C emqx-rel emqx-edge-docker-push
        fi
    - name: update repo.emqx.io
      run: |
        if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
        if [ ! -z $(echo $version | grep -oE "v[0-9]+\.[0-9]+(\.[0-9]+)?") ]; then
          curl -H "Authorization: token ${{ secrets.AccessToken }}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" -X POST -d "{\"event_type\":\"update_repos\",\"client_payload\":{\"version\": \"$version\",\"emqx_ce\":true,\"emqx_ee\":false}}" https://api.github.com/repos/emqx/emqx-packages-docker/dispatches
        fi
    # - name: update homebrew packages
    #   run: |
    #     if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
    #     if [ ! -z $(echo $version | grep -oE "v[0-9]+\.[0-9]+(\.[0-9]+)?") ] && [ -z $(echo $version | grep -oE "(alpha|beta|rc)\.[0-9]") ]; then
    #       curl -H "Authorization: token ${{ secrets.AccessToken }}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" -X POST -d "{\"event_type\":\"update_homebrew\",\"client_payload\":{\"version\": \"$version\"}}" https://api.github.com/repos/emqx/emqx-packages-docker/dispatches
    #     fi