name: Run all test cases

on: 
  push:
    tags:
      - v*
  repository_dispatch:
    types: [run_all_test_cases]

jobs:

    run_test_case:

        runs-on: ubuntu-latest

        steps:
        - name: Install docker-compose
          run: | 
            sudo curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
        - uses: actions/checkout@v2
          with:
            repository: emqx/emqx-integration-test
            token: ${{ secrets.AccessToken }} 
            path: emqx-integration-test
        - name: Run all test cases
          run: |
            if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
            cd emqx-integration-test/docker-compose
            sudo docker-compose -p emqx_auto_func_test up -d --build
            sudo docker ps -a
            sudo docker exec emqx_auto_func_test_emqx_1 bash -xc "cd /tests; sed -i '/^set.*/d' run_emqx.sh; export EMQX_DEPS_DEFAULT_VSN=$version; ./run_emqx.sh emqx-ce.spec "
            sudo docker exec emqx_auto_func_test_python_1 bash -xc "cd /tests && python ./boot.py "
            sudo docker-compose -p emqx_auto_func_test down
        - uses: actions/upload-artifact@v1
          if: always()
          with:
            name: logs
            path: emqx-integration-test/docker-compose/files/logs
        - name: Run paho test
          run: |
            if [ ${{ github.event_name}} == 'repository_dispatch' ]; then version=${{ github.event.client_payload.version }}; else version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g"); fi
            cd emqx-integration-test/paho-test
            EMQX_DEPS_DEFAULT_VSN=$version TARGET=emqx/emqx PAHO_BRANCH="develop-4.0" make 