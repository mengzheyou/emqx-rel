include:
  local: 'ayla-plugin-config.yml'

variables:
  CONTAINER_TEST_IMAGE: ${CI_REGISTRY}/${CONTAINER_IMAGE}:${CI_COMMIT_REF_SLUG}
  CONTAINER_RELEASE_IMAGE: ${CI_REGISTRY}/${CONTAINER_IMAGE}:${CI_COMMIT_TAG}


  #services:
  #  - docker:dind

stages:
  - build
  - deploy

before_script:
  - echo $CONTAINER_IMAGE

build:docker-image:
  stage: build
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"   # for docker:dind 19.03+
  services:
    - docker:19.03-dind
  script:
    - echo "Building container image - $CONTAINER_TEST_IMAGE"
    - >
      docker image build \
        --build-arg "DEPS_GITLAB_TOKEN=$DEPS_GITLAB_TOKEN" \
        --build-arg "AYLA_AUTH_BRANCH_KEY=$AYLA_AUTH_BRANCH_KEY" \
        --build-arg "AYLA_AUTH_BRANCH=$AYLA_AUTH_BRANCH" \
        -t $CONTAINER_TEST_IMAGE -f deploy/docker/Dockerfile.ayla .
    - echo $CI_REGISTRY_TOKEN | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - docker image push $CONTAINER_TEST_IMAGE
    - docker logout $CI_REGISTRY
  only:
    - /^build[-|/].+$/
    - master
    - develop
    - /^\d\.\d\.\d-SNAPSHOT$/
  tags:
    - docker
    - build
    - image
    - hk

build:docker-image-rel:
  stage: build
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"   # for docker:dind 19.03+
  services:
    - docker:19.03-dind
  script:
    - echo "Building container image - $CONTAINER_RELEASE_IMAGE"
    - >
      docker image build --no-cache \
        --build-arg "DEPS_GITLAB_TOKEN=$DEPS_GITLAB_TOKEN" \
        --build-arg "AYLA_AUTH_BRANCH_KEY=$AYLA_AUTH_BRANCH_KEY" \
        --build-arg "AYLA_AUTH_BRANCH=$AYLA_AUTH_BRANCH" \
        -t $CONTAINER_RELEASE_IMAGE -f deploy/docker/Dockerfile.ayla .
    - echo $CI_REGISTRY_TOKEN | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - docker image push $CONTAINER_RELEASE_IMAGE
    - docker image rm $CONTAINER_RELEASE_IMAGE
    - docker logout $CI_REGISTRY
  only:
    - /^(\d+\.)?(\d+\.)?(\d+)(-pre|-rc)?$/
  tags:
    - docker
    - build
    - image
    - hk

deploy:runeck-upgrade:
  stage: deploy
  image: ${CD_IMAGE_RDCLI}
  variables:
    GIT_STRATEGY: none
    RUNDECK_JOB_API: "https://rundeck-cn.ayla.com.cn/api/18/job/${RUNDECK_JOB_ID}/run"
  script:
    - |
      if [ "$CD_THANOS_UPGRADE_ENABLE" = "yes" ]; then
        echo "Trigger Rundeck Upgrade Job - ${RD_URL}/${RD_THANOS_PROJECT}/${RD_THANOS_JOB}"
        rd run -p ${RD_THANOS_PROJECT} -j ${RD_THANOS_JOB}
      else
        echo "Disabled Thanos env upgrade."
      fi
  only:
    - master
  tags:
    - docker
    - build
    - hk
